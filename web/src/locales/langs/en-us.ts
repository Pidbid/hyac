const local: App.I18n.Schema = {
  system: {
    title: 'Hyac',
    updateTitle: 'System Version Update Notification',
    updateContent: 'A new version of the system has been detected. Do you want to refresh the page immediately?',
    updateConfirm: 'Refresh immediately',
    updateCancel: 'Later'
  },
  common: {
    action: {
      _self: 'Action',
      select: 'Select',
      edit: 'Edit'
    },
    add: 'Add',
    addSuccess: 'Add Success',
    backToHome: 'Back to home',
    batchDelete: 'Batch Delete',
    cancel: 'Cancel',
    close: 'Close',
    check: 'Check',
    expandColumn: 'Expand Column',
    columnSetting: 'Column Setting',
    config: 'Config',
    confirm: 'Confirm',
    delete: 'Delete',
    deleteSuccess: 'Delete Success',
    confirmDelete: 'Are you sure you want to delete?',
    edit: 'Edit',
    editSuccess:'Edit Success',
    editFailed:'Edit Failed',
    warning: 'Warning',
    error: 'Error',
    index: 'Index',
    keywordSearch: 'Please enter keyword',
    logout: 'Logout',
    logoutConfirm: 'Are you sure you want to log out?',
    lookForward: 'Coming soon',
    modify: 'Modify',
    modifySuccess: 'Modify Success',
    noData: 'No Data',
    operate: 'Operate',
    pleaseCheckValue: 'Please check whether the value is valid',
    refresh: 'Refresh',
    reset: 'Reset',
    search: 'Search',
    save: 'Save',
    switch: 'Switch',
    tip: 'Tip',
    trigger: 'Trigger',
    update: 'Update',
    updateSuccess: 'Update Success',
    addFailed: 'Failed to add',
    deleteFailed: 'Failed to delete',
    fetchFailed: 'Failed to fetch data',
    saveFailed: 'Failed to save',
    saveSuccess: 'Saved successfully',
    userCenter: 'User Center',
    yesOrNo: {
      yes: 'Yes',
      no: 'No'
    }
  },
  request: {
    logout: 'Logout user after request failed',
    logoutMsg: 'User status is invalid, please log in again',
    logoutWithModal: 'Pop up modal after request failed and then log out user',
    logoutWithModalMsg: 'User status is invalid, please log in again',
    refreshToken: 'The requested token has expired, refresh the token',
    tokenExpired: 'The requested token has expired'
  },
  theme: {
    themeSchema: {
      title: 'Theme Schema',
      light: 'Light',
      dark: 'Dark',
      auto: 'Follow System'
    },
    grayscale: 'Grayscale',
    colourWeakness: 'Colour Weakness',
    layoutMode: {
      title: 'Layout Mode',
      vertical: 'Vertical Menu Mode',
      horizontal: 'Horizontal Menu Mode',
      'vertical-mix': 'Vertical Mix Menu Mode',
      'horizontal-mix': 'Horizontal Mix menu Mode',
      reverseHorizontalMix: 'Reverse first level menus and child level menus position'
    },
    recommendColor: 'Apply Recommended Color Algorithm',
    recommendColorDesc: 'The recommended color algorithm refers to',
    themeColor: {
      title: 'Theme Color',
      primary: 'Primary',
      info: 'Info',
      success: 'Success',
      warning: 'Warning',
      error: 'Error',
      followPrimary: 'Follow Primary'
    },
    scrollMode: {
      title: 'Scroll Mode',
      wrapper: 'Wrapper',
      content: 'Content'
    },
    page: {
      animate: 'Page Animate',
      mode: {
        title: 'Page Animate Mode',
        fade: 'Fade',
        'fade-slide': 'Slide',
        'fade-bottom': 'Fade Zoom',
        'fade-scale': 'Fade Scale',
        'zoom-fade': 'Zoom Fade',
        'zoom-out': 'Zoom Out',
        none: 'None'
      }
    },
    fixedHeaderAndTab: 'Fixed Header And Tab',
    header: {
      height: 'Header Height',
      breadcrumb: {
        visible: 'Breadcrumb Visible',
        showIcon: 'Breadcrumb Icon Visible'
      },
      multilingual: {
        visible: 'Display multilingual button'
      },
      globalSearch: {
        visible: 'Display GlobalSearch button'
      }
    },
    tab: {
      visible: 'Tab Visible',
      cache: 'Tag Bar Info Cache',
      height: 'Tab Height',
      mode: {
        title: 'Tab Mode',
        chrome: 'Chrome',
        button: 'Button'
      }
    },
    sider: {
      inverted: 'Dark Sider',
      width: 'Sider Width',
      collapsedWidth: 'Sider Collapsed Width',
      mixWidth: 'Mix Sider Width',
      mixCollapsedWidth: 'Mix Sider Collapse Width',
      mixChildMenuWidth: 'Mix Child Menu Width'
    },
    footer: {
      visible: 'Footer Visible',
      fixed: 'Fixed Footer',
      height: 'Footer Height',
      right: 'Right Footer'
    },
    watermark: {
      visible: 'Watermark Full Screen Visible',
      text: 'Watermark Text'
    },
    themeDrawerTitle: 'Theme Configuration',
    pageFunTitle: 'Page Function',
    resetCacheStrategy: {
      title: 'Reset Cache Strategy',
      close: 'Close Page',
      refresh: 'Refresh Page'
    },
    configOperation: {
      copyConfig: 'Copy Config',
      copySuccessMsg: 'Copy Success, Please replace the variable "themeSettings" in "src/theme/settings.ts"',
      resetConfig: 'Reset Config',
      resetSuccessMsg: 'Reset Success'
    }
  },
  route: {
    login: 'Login',
    403: 'No Permission',
    404: 'Page Not Found',
    500: 'Server Error',
    'iframe-page': 'Iframe',
    home: 'Home',
    apps: 'Dashboard',
    function: 'Function',
    database: 'Database',
    storage: 'Storage',
    log: 'Log',
    setting: 'Setting'
  },
  page: {
    login: {
      common: {
        loginOrRegister: 'Login / Register',
        userNamePlaceholder: 'Please enter user name',
        phonePlaceholder: 'Please enter phone number',
        codePlaceholder: 'Please enter verification code',
        passwordPlaceholder: 'Please enter password',
        confirmPasswordPlaceholder: 'Please enter password again',
        codeLogin: 'Verification code login',
        confirm: 'Confirm',
        back: 'Back',
        validateSuccess: 'Verification passed',
        loginSuccess: 'Login successfully',
        welcomeBack: 'Welcome back, {userName} !',
        captchaPlaceholder: 'Please enter captcha'
      },
      pwdLogin: {
        title: 'Password Login',
        rememberMe: 'Remember me',
        forgetPassword: 'Forget password?',
        register: 'Register',
        otherAccountLogin: 'Other Account Login',
        otherLoginMode: 'Other Login Mode',
        superAdmin: 'Super Admin',
        admin: 'Admin',
        user: 'User'
      },
      codeLogin: {
        title: 'Verification Code Login',
        getCode: 'Get verification code',
        reGetCode: 'Reacquire after {time}s',
        sendCodeSuccess: 'Verification code sent successfully',
        imageCodePlaceholder: 'Please enter image verification code'
      },
      register: {
        title: 'Register',
        agreement: 'I have read and agree to',
        protocol: 'ã€ŠUser Agreementã€‹',
        policy: 'ã€ŠPrivacy Policyã€‹'
      },
      resetPwd: {
        title: 'Reset Password'
      },
      bindWeChat: {
        title: 'Bind WeChat'
      }
    },
    home: {
      search: 'Search',
      searchPlaceholder: 'Please enter search content',
      appName: 'Name',
      appDesc: 'Description',
      appStatus: 'Status',
      appId: 'ID',
      emptyApp: 'No application, please create one first',
      createApp: 'Create Application',
      welcome: 'Hello ðŸ‘‹, {userName}, Welcome to the Hyac cloud development platform!',
      welcomeDescription: 'Here, you can develop any application as a full-stack, backend,\ncloud development user, Python developer, independent\ndeveloper, etc., for example:',
      miniProgram: 'WeChat Mini Program/Public Account',
      androidOrIos: 'Android or iOS app',
      blogOrWebsite: 'Personal blog, corporate official website',
      enterpriseInfo: 'Enterprise information construction',
      handyCloud: 'Personal developer\'s "handy cloud"',
      explore: 'waiting for you to explore',
      createYourApp: 'Come and create an application of your own~',
      newApplication: 'New Application',
      pause: 'Pause',
      start: 'Start',
      restart: 'Restart',
      deleteConfirm: 'Are you sure you want to delete this application?',
      appNamePlaceholder: 'Please enter application name',
      appDescPlaceholder: 'Please enter application description',
      create: 'Create',
      appCreationRequestSent: 'Application creation request sent. Starting in the background...',
      appNowRunning: "Application '{appName}' is now {status}.",
      stopCheckingStatus: "Stopped checking status for '{appName}'. Please check manually.",
      failedToCreateApp: 'Failed to create application',
      errorCreatingApp: 'An error occurred while creating the application',
      fillInCompletely: 'Please fill in completely',
      appDeleted: 'Application deleted successfully',
      failedToDeleteApp: 'Failed to delete application',
      errorDeletingApp: 'An error occurred while deleting the application',
      appStarting: 'Application is starting...',
      failedToStartApp: 'Failed to start application',
      errorStartingApp: 'An error occurred while starting the application',
      appStopping: 'Application is stopping...',
      failedToStopApp: 'Failed to stop application',
      errorStoppingApp: 'An error occurred while stopping the application',
      appRestarting: 'Application is restarting...',
      failedToRestartApp: 'Failed to restart application',
      errorRestartingApp: 'An error occurred while restarting the application'
    },
    apps: {
      functionCount: 'Functions',
      databaseCount: 'Databases',
      storageCount: 'Storage Usage',
      requestCount: 'Requests (24h)',
      requestCountUnit: 'times',
      functionCountUnit: 'items',
      databaseCountUnit: 'rows',
      storageCountUnit: 'MB',
      top5Functions: 'Top 5 Functions',
      unknown: 'Unknown'
    },
    database: {
      collection: 'Collection',
      createCollection: 'Create Collection',
      collectionNamePlaceholder: 'Please enter collection name',
      createSuccess: 'Collection created successfully',
      insertDocument: 'Insert Document',
      createDocumentSuccess: 'Created successfully',
      jsonFormatError: 'JSON format error, please check',
      confirmDelete: 'Confirm Delete',
      deleteDocumentConfirm: 'Are you sure you want to delete document ID: {id}?',
      deleteSuccess: 'Deleted successfully',
      deleteCancelled: 'Delete cancelled',
      deleteCollectionConfirm: 'Are you sure you want to delete the collection: {name}? This action is irreversible, please operate with caution!',
      confirmClear: 'Confirm Clear',
      clearCollectionConfirm: 'Are you sure you want to clear the collection: {name}? This action is irreversible, please operate with caution!',
      clearSuccess: 'Cleared successfully',
      saveSuccess: 'Saved successfully',
      saveFailed: 'Save failed, please check the data format',
      cancelEdit: 'Cancel edit',
      refreshSuccess: 'Refreshed successfully',
      document: 'Document',
      documentOperations: 'Document Operations',
      editContent: 'Edit Content',
      save: 'Save',
      cancel: 'Cancel',
      emptyDescription: 'Select a document to edit or create a new one',
      idColumn: 'ID',
      contentColumn: 'Content',
      actionsColumn: 'Actions',
      noCollections: 'No collections, go and create one'
    },
    function: {
      tagsGroup: {
        all: 'All',
        api: 'API',
        common: 'Common'
      },
      createFunction: 'Create Function',
      editFunction: 'Edit Function',
      functionName: 'Function Name',
      functionNamePlaceholder: 'Please enter function name',
      functionType: 'Function Type',
      apiFunction: 'API Function',
      commonFunction: 'Common Function',
      functionTemplate: 'Function Template',
      functionTemplatePlaceholder: 'Please select function template',
      functionDescription: 'Function Description',
      functionDescriptionPlaceholder: 'Please enter function description',
      tags: 'Tags',
      tagsPlaceholder: 'Please enter tags (comma separated)',
      createSuccess: 'Created successfully',
      createFailed: 'Creation failed, please try again later',
      confirmDelete: 'Confirm Delete',
      deleteConfirm: 'Are you sure you want to delete the function "{name}"? This action is irreversible!',
      delete: 'Delete',
      deleteSuccess: 'Function has been deleted',
      saveSuccess: 'Code has been saved',
      saveFailed: 'Failed to save code, please try again later',
      noHistory: 'This function has no history',
      confirmRollback: 'Confirm Rollback',
      rollbackConfirm: 'Are you sure you want to roll back the current code to the version of {date}?',
      rollback: 'Confirm Rollback',
      rollbackSuccess: 'Code has been successfully rolled back',
      editorSettings: 'Editor Settings',
      fontSize: 'Font Size',
      codePreview: 'Code Preview',
      settingsSuccess: 'Settings saved successfully',
      confirmDeleteDependence: 'Confirm Delete Dependence',
      deleteDependenceConfirm: 'Are you sure you want to delete the dependence "{name}"?',
      deleteOnly: 'Delete Only',
      deleteAndRestart: 'Delete and Restart',
      dependenceDeleted: 'Dependence has been deleted',
      dependenceDeletedAndRestarting: 'Dependence has been deleted, container is restarting...',
      deleteFailed: 'Delete failed',
      addDependenceSuccessAndRestarting: 'Dependence added successfully, container is restarting...',
      addDependenceSuccess: 'Dependence added successfully',
      addDependenceFailed: 'Failed to add dependence',
      getPackageInfoFailed: 'Failed to get package info',
      add: 'Add',
      dependenceName: 'Dependence Name',
      version: 'Version',
      install: 'Install',
      installAndRestart: 'Install and Restart',
      dependenceManagement: 'Dependence Management',
      getDependenceListFailed: 'Failed to get dependence list',
      installed: 'Installed',
      noDependence: 'No dependence',
      systemDependence: 'System Dependence',
      noSystemDependence: 'No system dependence',
      dependenceNamePlaceholder: 'Please enter dependence name',
      actions: 'Actions',
      envManagement: 'Environment Variable Management',
      getEnvFailed: 'Failed to get environment variables',
      custom: 'Custom',
      noCustomEnv: 'No custom environment variables',
      systemBuiltin: 'System Built-in',
      noSystemBuiltinEnv: 'No system built-in environment variables',
      addEnv: 'Add Environment Variable',
      key: 'Key',
      value: 'Value',
      addSuccess: 'Added successfully',
      addFailed: 'Failed to add',
      editEnv: 'Edit Environment Variable',
      updateSuccess: 'Updated successfully',
      updateFailed: 'Failed to update',
      confirmDeleteEnv: 'Confirm Delete Environment Variable',
      deleteEnvConfirm: 'Are you sure you want to delete the environment variable "{key}"?',
      emptyDescription: 'Please create or select a function first',
      functionEditor: 'Function Editor Area',
      publish: 'Publish',
      published: 'Published',
      functionHistory: 'Function History',
      selectHistory: 'Please select a history version on the left',
      rollbackToThisVersion: 'Rollback to this version',
      functionList: 'Function List',
      envVariables: 'Environment Variables',
      noFunctions: 'No functions',
      log: 'Log',
      allLogs: 'All Logs',
      functionLogs: 'Function Logs',
      systemLogs: 'System Logs',
      functionTest: 'Function Test',
      clickToSend: 'Click "Send Request" to test...',
      postFormatError: 'POST request format is incorrect',
      requesting: 'Requesting...',
      requestSuccessNoData: 'Request successful, but no data returned.',
      requestFailed: 'Request failed:',
      duplicateHeader: 'Duplicate header key: {key}',
      fillBlankHeader: 'Please fill in the current blank Header key-value pair first',
      cannotDeleteHeader: 'Cannot delete this Header',
      fillBlankQuery: 'Please fill in the current blank Query parameter key-value pair first',
      addressCopied: 'Address copied',
      copyFailed: 'Your browser does not support the copy function',
      responseCopied: 'Response result copied',
      headerPlaceholder: 'Select or enter Header',
      headerValuePlaceholder: 'Header Value',
      queryParameters: 'Query Parameters',
      keyPlaceholder: 'Key',
      valuePlaceholder: 'Value',
      bodyJson: 'Body (JSON)',
      sendRequest: 'Send Request',
      response: 'Response',
      responsePlaceholder: 'Response result',
      commonFunctionTestHint: 'Common functions cannot be tested online directly. Please call them in other functions.'
    },
    log: {
      loadFunctionListFailed: 'Failed to load function list',
      requestFunctionListError: 'Request function list exception: {message}',
      selectAppFirst: 'Please select an application first',
      loadLogFailed: 'Failed to load log: {message}',
      requestLogError: 'Request log exception: {message}',
      allFunctions: 'All Functions',
      allLevels: 'All Levels',
      allTypes: 'All Types',
      query: 'Query',
      logDetail: 'Log Detail',
      time: 'Time',
      level: 'Level',
      type: 'Type',
      functionName: 'Function Name',
      selectLogToView: 'Select a log to view details',
      system: 'System',
      function: 'Function',
      info: 'Info',
      warning: 'Warning',
      error: 'Error',
      debug: 'Debug',
      critical: 'Critical',
      logContent: 'Log',
      source: 'Source'
    },
    storage: {
      root: 'Root',
      newFolder: 'New Folder',
      uploadFile: 'Upload File',
      detail: 'Detail',
      preview: 'Preview',
      type: 'Type',
      size: 'Size',
      modifiedDate: 'Modified Date',
      download: 'Download',
      folder: 'Folder',
      file: 'File',
      selectFileOrFolder: 'Select a file or folder to view details',
      loadFailed: 'Failed to load file list: {message}',
      requestError: 'Request exception: {message}',
      previewLinkFailed: 'Failed to generate preview link: {message}',
      loadJsonFailed: 'Failed to load JSON content',
      previewFailed: 'Preview failed: {message}',
      uploading: 'Uploading file...',
      uploadFailed: 'Upload failed: {message}',
      uploadSuccess: 'File "{name}" uploaded successfully',
      uploadError: 'Upload exception: {message}',
      folderNamePlaceholder: 'Please enter folder name',
      confirm: 'Confirm',
      cancel: 'Cancel',
      folderNameEmpty: 'Folder name cannot be empty and cannot contain slashes',
      creatingFolder: 'Creating folder...',
      createFailed: 'Creation failed: {message}',
      createSuccess: 'Folder "{name}" created successfully',
      createError: 'Creation exception: {message}',
      enterFolder: 'Entering folder: {name}',
      backTo: 'Back to: {name}',
      confirmDelete: 'Confirm Deletion',
      deleteConfirm: 'This action is irreversible. Are you sure you want to delete {type} "{name}"?',
      deleting: 'Deleting...',
      deleteFailed: 'Deletion failed: {message}',
      deleteSuccess: '{type} "{name}" has been deleted',
      deleteError: 'Deletion exception: {message}',
      generatingLink: 'Generating download link for: {name}',
      generateLinkFailed: 'Failed to generate download link: {message}',
      downloadStarted: 'Download started: {name}',
      downloadFailed: 'Download failed: {message}',
      name: 'Name',
      actions: 'Actions',
      deleteSelectedConfirm: 'Are you sure you want to delete the selected {count} files?',
      someDeletesFailed: '{count} files failed to delete',
      deleteSuccessPlural: 'Successfully deleted {count} files'
    },
    setting: {
      group: {
        system: 'System Settings',
        application: 'Application Settings'
      },
      dependencies: 'Dependencies',
      dependenciesTipTitle: 'Dependency Management Guide',
      dependenciesTipContent: 'Dependencies managed here will be available to all functions within this application. A restart is required for changes to take effect.',
      userDependencies: 'User Dependencies',
      systemDependencies: 'System Dependencies',
      addDependency: 'Add Dependency',
      dependencyName: 'Dependency Name',
      dependencyNamePlaceholder: 'Enter PyPI package name',
      dependencyVersionPlaceholder: 'Enter version (or leave blank for latest)',
      confirmDelete: 'Confirm Deletion',
      deleteDependencyConfirm: 'Are you sure you want to delete the dependency "{name}"? This may require an application restart.',
      restartRequired: 'Restart Required',
      dependencyChangeRestartPrompt: 'Dependencies have changed. A restart is required to apply the new changes.',
      restartNow: 'Restart Now',
      restarting: 'Restarting...',
      restartingTip: 'The application is restarting in the background. Please refresh later to check the status.',
      restartInitiated: 'Restart task has been successfully initiated',
      restartFailed: 'Failed to initiate restart task',
      key: 'Key',
      value: 'Value',
      envTipTitle: 'Environment Variables Guide',
      envTipContent: 'Environment variables managed here will be injected into the application\'s runtime. A restart is required for changes to take effect.',
      userEnv: 'User Variables',
      systemEnv: 'System Variables',
      addEnv: 'Add Environment Variable',
      editEnv: 'Edit Environment Variable',
      keyPlaceholder: 'Enter variable name',
      valuePlaceholder: 'Enter variable value',
      deleteEnvConfirm: 'Are you sure you want to delete the environment variable "{key}"? This action requires an application restart.',
      envChangeRestartPrompt: 'Environment variables have changed. A restart is required to apply the new changes.',
      corsTipTitle: 'Cross-Origin Resource Sharing (CORS) Guide',
      corsTipContent: 'Configure the CORS policy for your application to allow web frontend requests from different origins. Use "*" as a wildcard.',
      corsTipDynamicInput: 'Click the "+" button on the right to add multiple values.',
      originPlaceholder: 'e.g., https://example.com',
      methodPlaceholder: 'e.g., GET, POST',
      headerPlaceholder: 'e.g., Content-Type',
      notificationTipTitle: 'Notification Channel Guide',
      notificationTipContent: 'Configure how the application sends notifications for specific events, such as function execution failures, custom notifications, etc.',
      sendTest: 'Send Test Notification',
      dangerZone: 'Danger Zone',
      confirmRestart: 'Confirm Restart',
      restartAppConfirm: 'Are you sure you want to restart this application? It will be temporarily unavailable.',
      restartApp: 'Restart Application',
      restartAppDesc: 'If the application is having issues, you can try restarting it.',
      confirmStop: 'Confirm Stop',
      stopAppConfirm: 'Are you sure you want to stop this application? It will be inaccessible.',
      stopApp: 'Stop Application',
      stopAppDesc: 'Stopping the application will release all related resources.',
      stopInitiated: 'Stop task has been successfully initiated',
      stopFailed: 'Failed to initiate stop task',
      confirmDeleteApp: 'Confirm Delete Application',
      deleteApp: 'Delete Application',
      deleteAppDesc: 'This action is irreversible and will permanently delete the application and all its data.',
      deleteAppConfirm1: 'This is an irreversible action.',
      deleteAppConfirm2: 'All related data, including functions, logs, and storage buckets, will be permanently deleted.',
      deleteAppConfirm3: 'Please type the application ID',
      deleteAppConfirm4: 'to confirm.',
      deleteAppInputPlaceholder: 'Please type the application ID',
      incorrectAppId: 'The entered application ID is incorrect',
      deleteInitiated: 'Delete task has been successfully initiated',
      deleteFailed: 'Failed to initiate delete task',
      general: 'General Settings',
      api: 'API Settings',
      database: 'Database Settings',
      functions: 'Function Management',
      storage: 'Storage Settings',
      users: 'User Management',
      notifications: 'Notification Settings',
      appName: 'Application Name',
      appNamePlaceholder: 'Please enter application name',
      defaultLanguage: 'Default Language',
      selectLanguage: 'Please select language',
      themeMode: 'Theme Mode',
      apiKeyManagement: 'API Key Management',
      manageApiKeys: 'Manage API Keys',
      corsConfig: 'CORS Configuration',
      corsPlaceholder: 'Enter allowed CORS origins, separated by commas',
      rateLimit: 'Rate Limit',
      rateLimitPlaceholder: 'Enter requests per second limit',
      dbConnectionString: 'Database Connection String',
      dbConnectionStringPlaceholder: 'Please enter database connection string',
      dbBackupRestore: 'Database Backup/Restore',
      backupNow: 'Backup Now',
      runtimeEnvironment: 'Runtime Environment',
      selectRuntime: 'Please select runtime environment',
      logLevel: 'Log Level',
      selectLogLevel: 'Please select log level',
      timeout: 'Timeout (seconds)',
      timeoutPlaceholder: 'Please enter timeout',
      environmentVariables: 'Environment Variables',
      envVarsPlaceholder: 'Enter environment variables (JSON format)',
      storagePath: 'Storage Path',
      storagePathPlaceholder: 'Please enter file storage path',
      fileSizeLimit: 'File Size Limit (MB)',
      fileSizeLimitPlaceholder: 'Please enter file size limit',
      userRegistration: 'User Registration',
      permissionManagement: 'Permission Management',
      managePermissions: 'Manage Permissions',
      smtpConfig: 'SMTP Configuration',
      smtpConfigPlaceholder: 'Enter SMTP configuration (JSON format)',
          webhookConfig: 'Webhook Configuration',
          webhookConfigPlaceholder: 'Enter Webhook URL',
          cors: 'CORS',
          allowOrigins: 'Allow Origins',
          userProfile: {
            title: 'User Profile',
            username: 'Username',
            usernamePlaceholder: 'Enter new username (leave blank for no change)',
            usernameHelp: '4-16 characters, supports Chinese, English, numbers, underscores, and hyphens',
            password: 'New Password',
            passwordPlaceholder: 'Enter new password (leave blank for no change)',
            passwordHelp: "6-18 characters, supports letters, numbers, underscores, and {'@'} symbol",
            confirmPassword: 'Confirm New Password',
            confirmPasswordPlaceholder: 'Enter the new password again',
            passwordsDoNotMatch: 'The two passwords do not match',
            noChanges: 'You have not entered anything to modify',
            confirmUpdate: 'Are you sure you want to update your profile? This action will require you to log in again.'
          },
      allowCredentials: 'Allow Credentials',
      allowMethods: 'Allow Methods',
      allowHeaders: 'Allow Headers',
      emailNotifications: 'Email Notifications',
      server: 'Server',
      port: 'Port',
      username: 'Username',
      password: 'Password',
      senderEmail: 'Sender Email',
      webhookNotifications: 'Webhook Notifications',
      url: 'URL',
      requestMethod: 'Request Method',
      requestBodyTemplate: 'Request Body Template',
      wechatNotifications: 'WeChat Notifications',
      notificationId: 'Notification ID',
      ai: {
        title: 'AI Settings',
        provider: 'Provider',
        providerPlaceholder: 'e.g., openai, azure, anthropic',
        model: 'Model',
        modelPlaceholder: 'e.g., gpt-4, gpt-3.5-turbo',
            apiKey: 'API Key',
            apiKeyPlaceholder: 'Please enter the API key',
            endpointUrl: 'Endpoint URL',
            endpointUrlPlaceholder: 'Please enter the endpoint URL, e.g., https://api.openai.com/v1',
            proxy: 'Proxy URL',
            proxyPlaceholder: 'Please enter the proxy URL, e.g., http://192.168.0.10:7890',
            success: {
              update: 'AI configuration updated successfully'
            },
            error: {
              noAppSelected: 'No application selected',
              fetch: 'Failed to fetch AI configuration',
              update: 'Failed to update AI configuration',
              empty: 'Please fill in at least one configuration item'
            }
          },
      systemUpdate: {
        title: 'System Update',
        checkingForUpdates: 'Checking for updates...',
        newVersionAvailable: 'New Version Available',
        latestVersion: 'Latest Version',
        publishedAt: 'Published At',
        changelog: 'Changelog',
        updateNow: 'Update Now',
        upToDate: 'You are up to date!',
        upToDateMessage: 'Your system is running the latest version.',
        currentServerVersion: 'Current Server Version',
        currentWebVersion: 'Current Web Version',
        currentAppVersion: 'Current App Version',
        currentLspVersion: 'Current LSP Version',
        updateError: 'Update Check Failed',
        updateDevInProgress: 'The update function is currently under development and is temporarily unavailable',
        updateErrorContent: 'Could not fetch the latest version information. Please try again later.',
        updateStarted: 'Update Started',
        updateStartedContent: 'The system update is in progress in the background. It may take a few minutes. Please refresh the page later.',
        updateFailed: 'Update Failed to Start',
        updateFailedContent: 'Could not start the update process. Please check the backend logs.',
        checkForUpdates: 'Check for Updates',
        proxyPlaceholder: 'Optional: Enter proxy address, e.g., http://127.0.0.1:7890',
        manualUpdate: 'Manual Update',
        manualUpdateDescription: 'You can manually specify the image tag for each service to update. Leave blank to not update a service.',
        serverTag: 'Server Image Tag',
        serverTagPlaceholder: 'The central hub for all services (leave blank to use current tag)',
        appTag: 'App Image Tag',
        appTagPlaceholder: 'The environment for each application (leave blank to use current tag)',
        lspTag: 'LSP Image Tag',
        lspTagPlaceholder: 'Provides programming hints and completion for Python (leave blank to use current tag)',
        webTag: 'Web Image Tag',
        webTagPlaceholder: 'The service for the console page (leave blank to use current tag)',
        manualUpdateInfo: 'Manual updates can cause serious errors. Do not use unless you know exactly what you are doing.',
        runManualUpdate: 'Run Manual Update',
        autoUpdateTab: 'Auto Update',
        manualUpdateTab: 'Manual Update',
        confirmUpdateTitle: 'Confirm Update',
        confirmUpdateContent: 'Are you sure you want to perform a manual update? Incorrect tags may cause services to fail to start.',
        changelogTab: 'Changelog',
        loadingChangelogs: 'Loading changelogs...',
        changelogError: 'Failed to load changelogs',
        changelogErrorContent: 'Could not fetch changelogs. Please try again later.'
      }
    },
    index: {
      branchDesc:
        'For the convenience of everyone in developing and updating the merge, we have streamlined the code of the main branch, only retaining the homepage menu, and the rest of the content has been moved to the example branch for maintenance. The preview address displays the content of the example branch.',
      greeting: 'Good morning, {userName}, today is another day full of vitality!',
      weatherDesc: 'Today is cloudy to clear, 20â„ƒ - 25â„ƒ!',
      projectCount: 'Project Count',
      todo: 'Todo',
      message: 'Message',
      downloadCount: 'Download Count',
      registerCount: 'Register Count',
      schedule: 'Work and rest Schedule',
      study: 'Study',
      work: 'Work',
      rest: 'Rest',
      entertainment: 'Entertainment',
      visitCount: 'Visit Count',
      turnover: 'Turnover',
      dealCount: 'Deal Count',
      projectNews: {
        title: 'Project News',
        moreNews: 'More News',
        desc1: 'Soybean created the open source project soybean-admin on May 28, 2021!',
        desc2: 'Yanbowe submitted a bug to soybean-admin, the multi-tab bar will not adapt.',
        desc3: 'Soybean is ready to do sufficient preparation for the release of soybean-admin!',
        desc4: 'Soybean is busy writing project documentation for soybean-admin!',
        desc5: 'Soybean just wrote some of the workbench pages casually, and it was enough to see!'
      },
      creativity: 'Creativity'
    }
  },
  form: {
    required: 'Cannot be empty',
    userName: {
      required: 'Please enter user name',
      invalid: 'User name format is incorrect'
    },
    phone: {
      required: 'Please enter phone number',
      invalid: 'Phone number format is incorrect'
    },
    pwd: {
      required: 'Please enter password',
      invalid: "6-18 characters, supports letters, numbers, underscores, and {'@'} symbol"
    },
    confirmPwd: {
      required: 'Please enter password again',
      invalid: 'The two passwords are inconsistent'
    },
    code: {
      required: 'Please enter verification code',
      invalid: 'Verification code format is incorrect'
    },
    email: {
      required: 'Please enter email',
      invalid: 'Email format is incorrect'
    }
  },
  dropdown: {
    closeCurrent: 'Close Current',
    closeOther: 'Close Other',
    closeLeft: 'Close Left',
    closeRight: 'Close Right',
    closeAll: 'Close All'
  },
  icon: {
    themeConfig: 'Theme Configuration',
    themeSchema: 'Theme Schema',
    lang: 'Switch Language',
    fullscreen: 'Fullscreen',
    fullscreenExit: 'Exit Fullscreen',
    reload: 'Reload Page',
    collapse: 'Collapse Menu',
    expand: 'Expand Menu',
    pin: 'Pin',
    unpin: 'Unpin'
  },
  datatable: {
    itemCount: 'Total {total} items'
  }
};

export default local;
