services:
  mongodb:
    image: bitnami/mongodb:latest
    container_name: hyac_mongodb
    hostname: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGODB_ROOT_USER: ${MONGODB_USERNAME}
      MONGODB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_ADVERTISED_HOSTNAME: mongodb
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_REPLICA_SET_KEY: ${MONGODB_PASSWORD}
    volumes:
      - mongodb_data:/bitnami/mongodb
    networks:
      - hyac_network
    healthcheck:
      test: |
        mongosh --host localhost --port 27017 \
          --authenticationDatabase admin \
          -u "${MONGODB_USERNAME}" -p "${MONGODB_PASSWORD}" \
          --eval "if (db.isMaster().ismaster) { quit(0); } else { quit(1); }"
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 15s
  minio:
    image: bitnami/minio:latest
    container_name: hyac_minio
    restart: unless-stopped
    ports:
    - 9000:9000
    - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
    - minio_data:/data
    networks:
    - hyac_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hyac-minio.rule=Host(`oss.${DOMAIN_NAME}`)"
      - "traefik.http.routers.hyac-minio.entrypoints=websecure"
      - "traefik.http.routers.hyac-minio.tls.certresolver=myresolver"
      - "traefik.http.services.hyac-minio.loadbalancer.server.port=9000"
  traefik:
    image: "traefik:latest"
    container_name: "hyac_traefik"
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL_ADDRESS}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/letsencrypt:/letsencrypt"
      - "./traefik/dynamic:/etc/traefik/dynamic"
    networks:
      - hyac_network
  server:
    image: wicos/hyac_server:latest
    container_name: hyac_server
    restart: unless-stopped
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      EMAIL_ADDRESS: ${EMAIL_ADDRESS}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      SECRET_KEY: ${SECRET_KEY}
      DEV_MODE: "false"
    ports:
      - 8000:8000
    depends_on:
      mongodb:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./traefik/dynamic:/traefik/dynamic
    networks:
    - hyac_network
    healthcheck:
      test: ["CMD", "python", "/server/healthcheck.py"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hyac-server.rule=Host(`server.${DOMAIN_NAME}`)"
      - "traefik.http.routers.hyac-server.entrypoints=websecure"
      - "traefik.http.routers.hyac-server.tls.certresolver=myresolver"
      - "traefik.http.services.hyac-server.loadbalancer.server.port=8000"
  app:
    image: wicos/hyac_app:latest
    command: ["echo", "This container is for image pulling and should not be running."]

networks:
  hyac_network:
    driver: bridge
volumes:
  mongodb_data:
    driver: local
  minio_data:
    driver: local
